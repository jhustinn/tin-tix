@extends('layouts.app')

@section('content')
<style>
    .card {
  width: 900px;
  height: 400px;
  margin: 0 auto;
  background-color: #24233b;
  border-radius: 8px;
  z-index: 1;
  box-shadow: 0px 10px 10px rgb(73, 70, 92);
  transition: 0.5s;
  width: 100%;
  max-width: 900px;
}

/* .card:hover {
  transform: translateY(-7px);
  box-shadow: 0px 10px 10px black;
} */

.top {
  display: flex;
  align-items: center;
  padding-left: 10px;
}

.circle {
  padding: 0 4px;
}

.circle2 {
  display: inline-block;
  align-items: center;
  width: 10px;
  height: 10px;
  padding: 1px;
  border-radius: 5px;
}

.red {
  background-color: #ff605c;
}

.yellow {
  background-color: #ffbd44;
}

.green {
  background-color: #00ca4e;
}

.header {
  margin: 5px;
  margin-top: 5px;
  border-radius: 5px;
}

#title2 {
  color: white;
  /* padding-left: 50px; */
  font-size: 15px;
}

.code-container {
  text-align: center;
}
#code {
  width: 870px;
  height: 350px;
  resize: none;
  background-color: rgb(73, 70, 92);
  border-radius: 5px;
  border: none;
  color: white;
  padding: 10px;
}
#code:focus {
  outline: none !important;
}

@media (max-width: 768px) {
  .card {
    width: 90%;
    height: auto;
    padding: 10px;
    margin: auto;
    margin-top: 10px;
  }

  #code {
    width: 100%;
    height: 250px;
  }
}

@media (max-width: 480px) {
  .card {
    width: 100%;
    height: auto;
    padding: 5px;
    margin: auto;
    margin-top: 10px;

  }

  #code {
    width: 100%;
    height: 200px;
  }
}
</style>

<div class="card">
    <div class="header">
      <div class="top">
        <div class="title">
          <p id="title2">Audio.java</p>
        </div>
      </div>
    </div>
    <div class="code-container">
        <textarea class="area" id="code" name="code" readonly="">
package sound;

import javax.sound.sampled.*;
import java.io.File;
import java.io.IOException;
import java.awt.Color;
import javax.swing.JLabel;
import javax.sound.sampled.AudioFileFormat;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.UnsupportedAudioFileException;

public class Audio extends javax.swing.JFrame {
    
    private Clip clip;
    private long lastPlaybackPosition = 0;
    private boolean isPlaying = false;

    public Audio() {
        initComponents();
        try {
            AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File("E:/Download/435am (1).wav").getAbsoluteFile());
            clip = AudioSystem.getClip();
            clip.open(audioInputStream);
        } catch (UnsupportedAudioFileException | IOException | LineUnavailableException e) {
            e.printStackTrace();
        }
        
//        jLabel1 = new JLabel("Song Title");
//        getContentPane().add(jLabel1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 255, 102));

        jButton1.setBackground(new java.awt.Color(102, 255, 102));
        jButton1.setText("Play");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 51, 51));
        jButton2.setText("Reset");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 204, 255));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sound/Screenshot 2024-01-24 145156.png"))); // NOI18N
        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(111, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(103, 103, 103))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(204, 204, 204)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 310, Short.MAX_VALUE)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(30, 30, 30))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        if (!clip.isRunning()) {
            startAudio();
            jButton1.setText("Pause");
        } else {
            stopAudio();
            jButton1.setText("Play");
        }
    }                                        

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        stopAudio();  // Stop the audio playback
    lastPlaybackPosition = 0;  // Reset the playback position to the beginning
    jButton1.setText("Play");   
    }                                        

    private void startAudio() {
        try {
            if (lastPlaybackPosition > 0) {
                clip.setMicrosecondPosition(lastPlaybackPosition);
            }
            clip.start();
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    private void stopAudio() {
        try {
            lastPlaybackPosition = clip.getMicrosecondPosition();
            clip.stop();
            clip.setMicrosecondPosition(0);
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Audio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Audio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Audio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Audio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Audio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar1;
    // End of variables declaration                   
}

        </textarea>
    </div>
  </div>
  <div class="card" style="height: 600px; margin-top: 10px; margin-bottom: 10px;">
    <div class="top">
        <div class="circle">
        </div>
        <div class="header">
            <h1 id="title2">Design Preview</h1>
        </div>
    </div>
    <div class="code-container">
        <img id="code" style="height: 570px" src="{{ asset('images/Screenshot 2024-06-07 071423.png') }}" alt="Descriptive Alt Text">
    </div>
</div>
  <div class="card">
    <div class="header">
      <div class="top">

        <div class="title">
          <p id="title2">PackageXirc/xirc.java</p>
        </div>
      </div>
    </div>
    <div class="code-container">
      <textarea class="area" id="code" name="code" readonly="">
        package xirc;

        public class xirc 
        {
            public static void main(String args[]) {
                System.out.println("HAIII!");
            }
        }</textarea>
    </div>
  </div>
  <div class="card">
    <div class="header">
      <div class="top">
        <div class="title">
          <p id="title2">PackageGamabr/gambar.java</p>
        </div>
      </div>
    </div>
    <div class="code-container">
      <textarea class="area" id="code" name="code" readonly="">
        package PackageGambar;

        public class gambar {
            public static void main(String args[]) {
                System.out.println("GAMBAR!");
            }
        }</textarea
      >
    </div>
  </div>
    
  
@endsection
